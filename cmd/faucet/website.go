// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x6d\x93\xdb\x36\x92\xfe\x3c\xfe\x15\x1d\x9e\xbd\x92\xce\x22\xa9\x99\xb1\xbd\xb3\x92\xa8\x94\xd7\x9b\xdd\xf3\x5d\x2e\x49\x25\x4e\xdd\xa6\xb2\xa9\x2b\x90\x6c\x89\xf0\x80\x00\x03\x80\xd2\x28\x53\xfa\xef\x57\x0d\x90\x14\xf5\x32\x13\x7b\xed\xab\xda\xf9\xa0\x21\x89\x46\x77\xa3\xfb\x01\xfa\x85\x9c\x7f\xf1\x97\x6f\xdf\xbc\xfb\xe9\xbb\xaf\xa0\xb0\xa5\x58\x3c\x99\xd3\x3f\x10\x4c\xae\x92\x00\x65\xb0\x78\x72\x31\x2f\x90\xe5\x8b\x27\x17\x17\xf3\x12\x2d\x83\xac\x60\xda\xa0\x4d\x82\xda\x2e\xc3\x9b\x60\x3f\x50\x58\x5b\x85\xf8\x6b\xcd\xd7\x49\xf0\xf7\xf0\xc7\xd7\xe1\x1b\x55\x56\xcc\xf2\x54\x60\x00\x99\x92\x16\xa5\x4d\x82\xb7\x5f\x25\x98\xaf\xb0\x37\x4f\xb2\x12\x93\x60\xcd\x71\x53\x29\x6d\x7b\xa4\x1b\x9e\xdb\x22\xc9\x71\xcd\x33\x0c\xdd\xcd\x18\xb8\xe4\x96\x33\x11\x9a\x8c\x09\x4c\x2e\x83\xc5\x13\xe2\x63\xb9\x15\xb8\xb8\xbf\x8f\xbe\x41\xbb\x51\xfa\x76\xb7\x9b\xc2\xeb\xda\x16\x28\x2d\xcf\x98\xc5\x1c\xfe\xca\xea\x0c\xed\x3c\xf6\x94\x6e\x92\xe0\xf2\x16\x0a\x8d\xcb\x24\x20\xd5\xcd\x34\x8e\xb3\x5c\xbe\x37\x51\x26\x54\x9d\x2f\x05\xd3\x18\x65\xaa\x8c\xd9\x7b\x76\x17\x0b\x9e\x9a\xd8\x6e\xb8\xb5\xa8\xc3\x54\x29\x6b\xac\x66\x55\x7c\x1d\x5d\x47\x7f\x8c\x33\x63\xe2\xee\x59\x54\x72\x19\x65\xc6\x04\xa0\x51\x24\x81\xb1\x5b\x81\xa6\x40\xb4\x01\xc4\x8b\x7f\x4e\xee\x52\x49\x1b\xb2\x0d\x1a\x55\x62\xfc\x22\xfa\x63\x34\x71\x22\xfb\x8f\x1f\x97\x4a\x62\x4d\xa6\x79\x65\xc1\xe8\xec\x83\xe5\xbe\xff\xb5\x46\xbd\x8d\xaf\xa3\xcb\xe8\xb2\xb9\x71\x72\xde\x9b\x60\x31\x8f\x3d\xc3\xc5\x27\xf1\x0e\xa5\xb2\xdb\xf8\x2a\x7a\x11\x5d\xc6\x15\xcb\x6e\xd9\x0a\xf3\x56\x12\x0d\x45\xed\xc3\xcf\x26\xf7\x21\x1f\xbe\x3f\x76\xe1\xe7\x10\x56\xaa\x12\xa5\x8d\xde\x9b\xf8\x2a\xba\xbc\x89\x26\xed\x83\x53\xfe\x4e\x00\x39\x8d\x44\x5d\xa4\x2a\xdf\xc2\x3d\x5d\x5d\xa4\x2c\xbb\x5d\x69\x55\xcb\x7c\x0a\x7a\x95\xb2\xe1\xd5\x8b\x9b\x31\x5c\x4d\xfe\x44\x3f\x37\x63\x98\x44\x2f\x2f\x47\x33\x22\xdd\xd1\x4f\xb4\x46\x4d\x98\x17\x61\x86\xd2\xa2\x6e\xb8\x94\x5c\x86\x05\xf2\x55\x61\xa7\x70\x39\x99\x3c\x9b\x9d\x7b\xba\x2e\xfc\xe3\x9c\x9b\x4a\xb0\xed\x14\x96\x02\xef\xfc\x23\x26\xf8\x4a\x86\xdc\x62\x69\xa6\xe0\x39\xf7\x64\x56\x5a\xad\x34\x1a\xd3\x08\xab\x94\xe1\x96\x2b\x39\x25\x2c\x32\xcb\xd7\x78\x8e\xd6\x54\x4c\x9e\x4c\x60\xa9\x51\xa2\xb6\x78\xa4\x48\x2a\x54\x76\xeb\x9f\xb9\x73\xa0\xbf\x88\x4c\x09\xa5\xa7\xb0\x29\x78\x33\x0d\x9c\x20\xa8\x34\x36\xec\xa1\x62\x79\xce\xe5\x6a\x0a\xaf\xaa\x66\x3d\x50\x32\xbd\xe2\x72\x0a\x93\xfd\x94\x79\xdc\x3a\x60\x1e\xfb\x23\xef\xc9\xc5\x9c\x3c\xe1\xbc\x9f\xf3\x35\x64\x82\x19\x93\x04\x47\x26\x76\x47\xd9\x01\x01\x9d\x60\x8c\xcb\x76\xe8\x60\x4c\xab\x4d\x00\x4e\x50\x12\x78\x25\xc2\x54\x59\xab\xca\x29\x5c\x92\x7a\xcd\x94\x23\x7e\x22\x14\xab\xf0\xf2\xaa\x1d\xbc\x98\x17\x97\x2d\x13\x8b\x77\x36\x74\xfe\xe9\x3c\x13\x2c\xe6\xbc\x9d\xbb\x64\xb0\x64\x61\xca\x6c\x11\x00\xd3\x9c\x85\x05\xcf\x73\x94\x49\x60\x75\x8d\x84\x40\xbe\x80\xaf\x7f\xfc\xaf\x1f\xbe\x85\xaf\x2f\x5f\xc2\x3b\x34\x56\xa2\x7d\xe0\xf0\x2c\x2e\x5b\xe5\xe2\x9c\xaf\x9b\xb5\xf5\x2e\x8f\x96\xf9\xf0\x4a\x6e\xa0\xb9\x50\xcb\xa5\x41\x1b\xf6\x16\xd6\x23\xe6\xb2\xaa\x6d\x48\xe0\xaf\xba\xf1\x8b\xb9\x7b\x0a\x3c\x4f\x82\x5a\x8b\xa0\x89\x1e\xee\xd2\x6e\xab\xc6\x1e\x41\xb7\x7a\xa5\xcb\x90\xdc\xa1\x95\x08\xa0\x12\x2c\xc3\x42\x89\x1c\x75\x12\xfc\xa0\x32\xce\x04\x48\x1f\x31\xe0\xc7\xef\xbf\x86\xc6\x6f\x5c\xae\x60\xab\x6a\x0d\x5f\xff\xf4\x77\x0b\x2c\xcf\x09\xaf\x51\x14\x05\xf1\x5e\x0b\x87\xde\x53\x3d\xc3\xd4\xca\xbd\xae\x17\xf3\xb4\xb6\x56\x75\x84\xa9\x95\x90\x5a\x19\xe6\xb8\x64\xb5\xb0\x90\x6b\x55\xe5\x6a\x23\x43\xab\x56\x2b\x8a\x92\x7e\x05\x7e\x52\x00\x39\xb3\xac\x19\x4a\x82\x96\xb6\xf5\x22\x33\x95\xaa\xea\xaa\xf1\xa3\x7f\x88\x77\x15\x93\x39\xe6\xe4\x75\x61\x30\x58\xfc\x8d\xaf\x11\x4a\x74\x0b\xb9\x38\xc6\x44\xc6\x34\xda\xb0\xcf\xf3\x04\x19\xf3\xd8\xeb\xe2\x57\x04\xcd\xdf\xbc\x16\x2d\xa7\x6e\x05\x25\xca\x1a\x0e\xee\x42\x4d\x07\x4b\xb0\xb8\xbf\xd7\x4c\xae\x10\x9e\xf2\xfc\x6e\x0c\x4f\x59\xa9\x6a\x69\x61\x9a\x40\xf4\xda\x5d\x9a\xdd\xee\x80\x3b\xc0\x5c\xf0\xc5\x9c\x3d\x86\x6f\x50\x32\x13\x3c\xbb\x4d\x02\xcb\x51\x27\xf7\xf7\xc4\x7c\xb7\x9b\xc1\xfd\x3d\x5f\xc2\xd3\xe8\x7b\xcc\x58\x65\xb3\x82\xed\x76\x2b\xdd\x5e\x47\x78\x87\x59\x6d\x71\x38\xba\xbf\x47\x61\x70\xb7\x33\x75\x5a\x72\x3b\x6c\xa7\xd3\x73\x99\xef\x76\xa4\x73\xa3\xe7\x6e\x07\x31\x31\x95\x39\xde\xc1\xd3\xe8\x3b\xd4\x5c\xe5\x06\x3c\xfd\x3c\x66\x8b\x79\x2c\xf8\xa2\x99\x77\x68\xa4\xb8\x16\x7b\xb8\xc4\x84\x97\x0e\xe3\x6e\xcb\x38\x55\xfb\x9a\x9e\xd9\x01\xab\xb0\xd3\xbe\x81\x83\xe1\x16\x6f\x71\x9b\x04\xf7\xf7\xfd\xb9\xcd\x68\xc6\x84\xa0\x80\x91\x04\x7e\x69\xdd\xa4\xdf\x90\x60\xba\xe6\xc6\x65\x63\x8b\x56\x83\xbd\xda\x1f\xb8\xa5\x8f\x4e\x2e\xab\xaa\x29\x5c\x5f\xf5\x8e\xad\x73\xbb\xfd\xd5\xd1\x6e\xbf\x3e\x4b\x5c\x31\x89\x02\xdc\x6f\x68\x4a\x26\xda\xeb\x66\xb3\xf4\x4e\x80\xe3\x49\x21\x1d\xd2\x9d\x6a\xdd\x61\x3f\x99\x81\x5a\xa3\x5e\x0a\xb5\x99\x02\xab\xad\x9a\x41\xc9\xee\xba\x80\x77\x3d\x99\xf4\xf5\xa6\x2c\x92\xa5\x02\xdd\xc9\xa2\xf1\xd7\x1a\x8d\x35\xdd\x39\xe2\x87\xdc\x2f\x1d\x27\x39\x4a\x83\xf9\x91\x35\x48\x22\x99\xd6\x51\xf5\x5c\xdf\x19\xf3\xac\xee\x4b\xa5\xba\x18\xd2\x57\xa3\x61\xdd\x0b\x77\xc1\x62\x6e\xf5\x9e\xee\x62\x6e\xf3\x8f\x8a\x01\x9a\xb2\xc3\x87\x42\x80\x3f\xd0\x68\xed\x15\xa2\xf6\xa9\x09\x41\x16\xdc\xed\x3c\xb6\xf9\x27\x48\x26\x10\xa6\xcc\xe0\x87\x88\x77\xa1\x7e\x2f\xde\xdd\x7e\xaa\xfc\x02\x99\xb6\x29\x32\xfb\x21\x0a\x2c\x6b\x99\xf7\xd6\x4f\x47\xe7\x27\x8a\xaf\x25\x5f\xa3\x36\xdc\x6e\x3f\x54\x3e\xe6\x7b\x05\xfc\xfd\xa1\x0a\xf3\xd8\xea\xc7\x91\xd6\xbf\xf9\x4c\x5b\xfb\xf7\x32\x92\xeb\xc5\x7f\xa8\x0d\xe4\x0a\x0d\xd8\x82\x1b\xa0\xb0\xfa\xe5\x3c\x2e\xae\x3b\x92\x6a\xf1\x8e\x06\x5c\x58\x5d\xba\x9c\x02\xb8\x01\x5d\x4b\x17\x72\x95\x04\x5b\x20\xf4\xab\xb8\x36\x3a\x47\xf0\x4e\x51\x42\xb7\x46\x69\xa1\x64\x82\x67\x5c\xd5\x06\x58\x66\x95\x36\xb0\xd4\xaa\x04\xbc\x2b\x58\x6d\x2c\x31\xa2\xb3\x83\xad\x19\x17\x6e\x23\x39\x7f\x82\xd2\xc0\xb2\xac\x2e\x6b\x4a\x48\xe5\x0a\x50\xaa\x7a\x55\x78\x55\xac\x02\x1f\x94\x84\x92\xab\x4e\x1d\x53\xb1\x12\x98\xb5\x2c\xbb\x35\x63\x68\x4f\x04\x60\x1a\xc1\x72\xcc\x69\x56\xa6\xca\x52\x49\xb8\xd6\x39\x54\x4c\xdb\x2d\x98\xc3\x9c\x82\x65\x99\x8b\x70\x11\xbc\x96\x5b\x25\x11\x0a\xb6\x76\x0a\xc2\x3b\x5f\x85\x90\x5a\x7f\x65\x19\xa6\x4a\x75\xd4\x50\xb2\x6d\x2b\xae\x51\x7e\xc3\x6d\xc1\xbd\x75\x2a\xd4\x25\x4d\xcd\x41\xf0\x92\x5b\x13\xcd\xe3\x6a\x7f\x9a\xee\xe3\xb2\x08\x0b\xa5\xf9\x6f\x94\xd0\x88\xfe\xd1\x69\x8f\x0e\x96\xf6\x5c\x74\x3e\x17\xb8\xb4\x53\x78\xe1\xcf\xc5\x63\x14\x37\x85\xd3\x39\x08\xb7\x3c\x5d\x41\x4a\xc1\x66\x0a\xd7\x3e\x97\xf5\x49\x44\x6e\x7b\x1a\xe4\x47\x40\xf3\x42\x6f\x6e\xaa\xbb\x4e\x8f\x2e\x21\x9e\x74\x4c\x08\x00\x87\x46\x59\xf3\xce\x8c\x63\x28\xd9\x2d\x02\x83\x39\x3b\x2a\xac\x1b\xa5\x5d\x59\xc6\x5d\x5b\x21\xb6\x1b\x44\xfb\x25\x6d\xdc\xe4\x7b\xcf\x90\xcb\xd5\xb3\xab\x89\x07\x24\x5d\x10\xfb\x67\x57\x13\x2e\xad\x7a\x76\x35\x99\xdc\x4d\x3e\xf0\xef\xd9\xd5\x44\xc9\x67\x57\x13\x5b\xe0\xb3\xab\xc9\xb3\xab\xeb\x3e\x94\xfd\x93\xaf\x6c\x81\x1a\xeb\x92\xa8\xd0\x90\xb4\x16\xe1\x01\x58\xa6\x57\x68\x93\xe0\x7f\x59\xaa\x6a\x3b\x4d\x05\x93\xb7\xc1\xc2\xa9\x4b\x99\x86\x43\xc1\x69\x5e\x0a\x15\x33\x04\x07\xd2\xd6\x21\xa4\x69\x9f\x18\x18\x9a\x5a\xbb\xc2\x91\x20\x47\xeb\x75\x7b\x53\x0e\x08\x61\x64\x94\x51\x34\x4f\x75\xbc\x78\xa3\xaa\x6d\xe8\x98\xb8\xe9\x27\x26\x34\x75\x55\x29\x6d\xa3\xbe\x29\x19\x15\x40\x02\x4d\x7c\x33\x79\x79\xf3\xea\x51\xd5\x0d\x65\xd6\x4e\xff\x4e\x43\x96\xaa\x35\x82\xcf\xe3\x53\x75\x07\x4c\xe6\xb0\xe4\x1a\x81\x6d\xd8\xf6\x8b\x79\x9c\xbb\xd2\xeb\xd3\x11\xbb\x6c\x76\xd6\xbf\x14\x64\xdb\xed\x3e\x86\xaa\x4e\x05\x37\x05\x30\x90\xb8\x81\xb9\xb1\x5a\xc9\xd5\xc2\x3d\xcd\xa8\x16\x75\xb7\x50\x29\x63\x1f\x72\x3d\x96\x29\xe6\xf9\x19\xe7\x7f\x2e\xdf\x6f\x36\x9b\xa8\xb5\xa2\x73\x7c\x81\xa2\x8a\xe9\xd8\xab\x25\xb7\xdb\xd8\x6f\x1f\x25\xe3\x2f\x79\x9e\x5c\xdd\x5c\xbd\x7a\x75\xf5\xe2\x4f\x37\x2f\x5f\x5e\xdd\xbc\x78\xf9\x10\x2a\x68\x41\x9f\x08\x0a\x9f\x3a\x7f\xa3\xa8\x4a\xed\xf2\x66\x8f\x95\x36\x5f\xa3\xb8\x9c\x53\xdd\xa1\x83\x7f\x1a\x3f\xb5\xa4\xe4\x23\x64\xe2\x6c\xde\xf0\x11\x08\x72\x10\x7a\x44\xb3\x4f\x84\x55\x0b\x1d\x42\x89\xaa\x2d\xad\xb0\x2d\xde\xb9\x92\x1d\x94\xc6\x60\x78\x59\x89\x2d\x64\x7b\xaf\x9f\x62\xea\x41\x87\xfc\x2e\xa4\x0e\x5d\xe6\x01\xe6\xe2\x7d\xa9\x72\xa4\x40\x6f\x6a\x93\x61\xe5\x1a\xc2\x14\x3d\xff\xbc\xfd\x8d\x49\xcb\x25\xb6\x51\x36\x82\x6f\xa5\xd8\x42\x6d\x10\x96\x4a\x43\x8e\x69\xbd\x5a\xb9\xcc\x40\x43\xa5\xf9\x9a\x59\x6c\x43\xab\x69\x10\xd1\x01\xa2\x57\xc9\x50\x92\x23\x7a\x39\xc7\x4f\xaa\x86\x8c\x49\xb0\x9a\x65\xb7\x7e\x97\xd4\x5a\xd3\x2e\xa9\xd0\xaf\xa6\x0b\xee\x29\x0a\xb5\x71\x24\x7e\xdd\x4b\x8e\xc2\x45\x7a\x83\x08\x85\xda\x40\x59\x67\x6e\x23\x52\x24\x77\x8b\xd8\x30\x6e\xa1\x96\x96\x0b\x6f\x4b\x5b\x6b\x49\x79\x01\x1e\x44\xe6\x93\x5a\x6f\x8e\xe5\xe2\x5d\x81\x67\xb2\xa0\xae\x4a\x03\x8d\x6f\x3c\x39\x54\x5a\x59\xcc\xc8\x99\xc0\x56\x8c\x4b\x43\x1e\x71\xb1\x1f\xcb\x0f\xa8\xe2\xba\xab\xe6\x62\xdf\xcc\x74\xc3\x71\x0c\x7f\x13\x2a\x65\x02\xd6\x84\xf2\x54\x50\x02\xa7\xa0\x50\xb4\xf4\x9e\xb5\x8c\x65\xb6\x36\xa0\x96\xee\xa9\xd7\x9c\xe6\xaf\x99\x26\x0f\x62\x59\x59\x48\x9a\x86\x1a\x3d\x33\xa8\xd7\x4d\x9b\x90\x6e\xa9\x52\x3f\x18\xef\xac\x9e\xc0\xcf\xbf\xcc\x9e\x34\xaa\xfc\x05\x97\x0e\x12\x84\x6d\xbf\x64\x5b\x30\x0b\x99\x46\x66\xd1\x40\x26\x94\xa9\xb5\xd7\x30\xd7\xaa\x02\xd2\xb2\xe5\xd4\x72\xa6\x81\xca\x49\x6b\x99\x0c\x0b\x66\x8a\x51\xd3\x0f\xd4\xe8\xbc\xd4\x8d\xb5\xcf\x2f\x08\x75\x43\x62\xc0\x93\xc9\x0c\xf8\xbc\xe5\x1b\x09\x94\x2b\x5b\xcc\x80\x3f\x7f\xde\x11\x5f\xf0\x25\x0c\x5b\x8a\x9f\xf9\x2f\x91\xbd\x8b\x48\x0a\x24\x09\xf4\xa5\x39\x81\x0d\x1f\x53\x09\x9e\xe1\x90\x8f\xa1\xe9\xd9\xd2\x5f\xaa\x91\xdd\xb6\x77\x8d\x1f\xfd\x3f\xf7\xbb\x9b\x1d\x5a\xc6\x19\xff\xc0\x36\xbe\xd6\x37\xc0\x60\xc5\x8d\x85\x5a\x0b\x68\xf6\xb0\x77\x41\xe7\x10\x47\xd7\xb7\xca\x09\x2e\x9b\x8b\x06\x53\xed\x12\x3c\x9b\xc8\xa0\xcc\x87\xff\xf9\xc3\xb7\xdf\x44\xc6\x6a\x2e\x57\x7c\xb9\x1d\xde\xd7\x5a\x4c\xe1\xe9\x30\xf8\xb7\x5a\x8b\x60\xf4\xf3\xe4\x97\x68\xcd\x44\x8d\x63\xe7\xef\xa9\xfb\x3d\x91\x32\x86\xe6\x72\x0a\x87\x02\x77\xa3\xd1\xec\x7c\x5f\xa4\xd7\xc6\xd1\x68\xd0\x0e\x89\xb0\x03\xfe\xb1\x8d\x18\x94\x68\x0b\xe5\xb6\xae\xc6\x4c\x49\x89\x99\x85\xba\x52\xb2\x31\x09\x08\x65\xcc\x1e\x88\x2d\x45\x72\x0a\x8a\x86\x3e\x71\x41\xfa\x7f\x30\xfd\x41\x65\xb7\x68\x87\xc3\xe1\x86\xcb\x5c\x6d\x22\xa1\xfc\x31\x1b\xd1\x26\x55\x99\x12\x90\x24\x09\x34\x11\x34\x18\xc1\x97\x10\x6c\x0c\xc5\xd2\x00\xa6\x74\x49\x57\x23\x78\x0e\xc7\xd3\x0b\x8a\xf3\xcf\x21\x88\x59\xc5\x83\x91\xdf\x0e\xad\xe1\x95\x2c\xd1\x18\xb6\xc2\xbe\x82\xae\x18\xea\x40\x46\xeb\x28\xcd\x0a\x12\x70\x0e\xaa\x98\x36\xe8\x49\x22\xaa\xbe\x5b\xb4\x11\x66\x1d\x59\x92\x80\xac\x85\xd8\x83\xd4\x6f\x8a\x59\x0b\xbf\x03\xf2\xc8\xc7\x99\x2f\x92\x04\xa8\x18\x25\x13\xe7\xfb\x99\xe4\x7c\x5f\x34\x8f\x22\x8a\x0b\xfb\x19\xa3\x59\x1f\xcd\x07\xdc\x30\xff\x3d\x76\x98\x1f\xf3\xc3\xfc\x01\x86\xae\x47\xf1\x18\x3f\xdf\xd3\xe8\xb1\x73\x0f\x1e\xe0\x26\xeb\x32\x45\xfd\x18\x3b\xdf\xa3\x68\xd8\x39\x53\xbf\x95\xb6\x37\x77\x0c\x97\xaf\x46\x0f\x70\x47\xad\xd5\x83\xcc\xa5\xb2\xdb\xe1\xbd\x60\x5b\xca\x97\x60\x60\x55\xf5\xc6\x35\x15\x06\x63\x17\x71\xa7\xd0\x71\x18\xbb\x5e\xf1\x14\x06\xee\x8e\xc6\x79\x89\x6e\xd6\xcb\xc9\x64\x32\x86\xf6\x35\xcb\x9f\x19\x6d\x42\x5d\xe3\xee\x01\x7d\x4c\x9d\x65\x14\xf7\x3f\x45\xa3\x86\x47\xa7\x53\x73\xff\x09\x5a\x75\xb1\xe1\x40\x2d\xf8\xc3\x1f\xe0\x64\xf4\x10\xc6\x71\x0c\xff\xcd\xa8\xf4\x16\xc2\x35\x0c\x5c\x9f\xa0\xa3\x2f\xb9\x31\xae\x00\x37\x90\x2b\x89\xcd\x9c\x8f\x3b\xf6\x4f\x74\x6c\xc8\x60\x01\x93\x63\x05\xe9\x38\xec\x85\x85\x33\xd1\xa2\xc7\xf7\x30\x10\x5c\xec\xfa\xf2\x0e\x66\xf2\x12\xe1\x8b\x04\x82\xa0\x3f\xf9\x84\x82\x08\x3a\x66\x17\x06\xed\x3b\xef\x8b\x61\x13\x1d\xcf\xc5\xae\xd1\x18\xae\x27\x93\xc9\xe8\x44\x89\xdd\xde\xbc\xaf\x2b\x4a\x9b\x80\xc9\xad\x3b\x12\x3b\xdb\xba\xc4\x91\x52\x20\x3a\xd2\x04\x64\x4a\x08\x9f\xb3\x34\x53\xc9\xc0\x4d\xc3\x24\x81\xf0\x72\x76\x26\x8a\xf6\x2c\xd9\x5b\xda\xb1\x7b\xce\xd8\xfe\xd8\x45\x87\x36\x3b\x22\x0e\x2f\x0f\x9c\x72\xe0\xaf\xf3\x8e\xb9\xe8\xf4\xe6\x7b\x8b\x1e\xb9\x6b\xef\xaf\x63\x9b\xf5\xf4\xf7\x7c\x9e\x5f\x7e\xe0\x32\xba\xe1\xaa\x36\xc5\xf0\x48\xd1\xd1\xec\xd4\x37\x6f\x2d\x6a\xca\x92\x15\x85\x2c\xf2\x05\x95\x01\x1a\x4f\x5c\xe2\x52\x75\x8d\xa1\x46\x99\xa3\x6e\x53\x0a\x9f\xd9\x53\x02\x78\xe0\x32\x5f\x51\xf6\xe1\xd4\x5b\xd1\x89\x6d\x67\xc0\x61\x41\x69\x1e\xf0\x30\xec\xad\xc5\xe5\x65\x4a\x22\x00\xc0\xd1\x4e\x70\x68\x3d\x80\x2b\x11\xa3\x60\x95\xc1\x1c\x12\xf0\x2f\xcd\x87\xa3\xa8\x96\xfc\x6e\x38\x0a\x9b\xfb\x63\x1e\xed\xf8\xac\xab\x13\x5b\xdd\x9f\x27\x10\xcc\xad\x06\x9e\x27\x83\x00\x9e\x9f\xdb\x87\x14\x7a\x07\x8b\xbd\x06\xfd\xa9\x00\x73\x9b\x2f\x5c\xfb\xd3\x17\x6c\xff\x08\xfa\x6f\xe5\x6b\x2d\x86\x27\x6c\xd9\x9a\x59\xa6\x1d\xd7\xd1\x0c\xf6\xe4\x4d\xa5\x98\x91\x87\x66\xe0\x4b\x52\xd7\x65\x85\xee\xbd\x84\xbb\x4b\x95\xce\x51\x87\x9a\xe5\xbc\x36\x53\x78\x51\xdd\xcd\xfe\xd1\xbe\xb7\x71\xbd\xe0\x47\x55\xad\x34\x2e\x4e\x34\x6a\xda\x8b\xcf\x21\x98\xc7\x44\xf0\x7b\x6c\xba\xc5\xf6\x5f\xb9\xc3\x99\x8e\x37\x74\x2f\xc4\x9b\xe7\x25\xcf\x73\x81\xa4\xf0\x9e\x3d\xed\x48\xf2\x7f\x7f\x5f\x1d\x8a\x84\xa6\xd5\xbd\x9f\xb3\x03\x14\x06\x1f\x99\xd0\x75\xcd\x07\x04\x80\x90\x96\xcc\x9d\xcd\x9b\x6a\xdb\x3d\xd6\x03\x67\x8b\xe6\xd3\x8b\xbc\xd6\x2e\xe1\x1a\x86\x0d\xc0\xc6\x30\x30\x94\x00\xe6\x66\x30\x8a\x8a\xba\x64\x92\xff\x86\x43\x0a\x4e\x23\x6f\x2b\xd7\x86\x0f\x4e\xcf\xe5\x13\x65\xf6\xfd\xf1\x41\x1b\xe8\x06\x8d\x11\x07\xad\x77\x5f\xec\x8b\xfb\x29\x4c\x66\x83\x8f\xb4\xd0\x79\x29\x61\xca\x34\xf4\x6f\xc2\x36\x02\x83\x56\x24\xbd\x1d\x4b\x99\x1e\xf8\x56\x86\x4b\xd2\xa5\xda\x24\x83\xeb\x49\xa7\xa4\x77\xb4\xf3\xf3\xa0\xc1\xda\x89\x33\x48\xcb\x76\x6b\x2e\xe0\x7a\xf2\x39\xb4\xf5\xed\x90\xa3\x15\x58\xcd\x2b\xcc\x81\x65\x96\xaf\xf1\xff\x61\x21\x9f\xc1\xc8\x1f\xad\x22\xe1\xb0\x35\x9e\x83\xe9\x81\xbe\x34\xda\xd9\xf6\xdf\x69\xbf\x41\xec\x2c\xfc\x1c\x82\xb3\x0b\x79\x10\x89\x47\x84\x47\x5b\xfb\xe1\x7d\xef\xde\x2b\x05\xc7\x81\x85\x52\xde\xee\x8d\xe8\x28\x2a\x6c\x29\x86\xc1\xdc\xba\x4f\x63\x48\xe7\x8e\x83\x63\xe0\x1f\x1f\xe6\x75\xbb\xc3\x6a\x86\x8a\x78\x3c\x2a\xb6\xa0\x97\xa1\x74\x05\x59\x9b\x8e\xc0\x6e\xff\x05\x51\x1c\xc3\x0f\x96\x69\x0b\x0c\x7e\x7c\x0b\x75\x95\x33\x4b\x21\x4c\x01\x05\x49\xff\x8e\xa4\xfd\xc4\x28\x65\xda\xc0\x52\xe9\x0d\xd3\x79\xd3\xa4\xb1\x05\x6e\xdd\x3b\x9c\x36\xff\x33\x68\xdf\xd2\x29\xb6\x66\x62\x78\x52\xfc\x3d\x1d\x0e\xa2\xbe\xcb\x07\xa3\x08\x59\x56\x9c\x12\xba\x88\xd5\xc9\x4d\xe0\x1b\x57\x07\x0c\x9f\x0e\x6d\xc1\xcd\x28\x62\xd6\xea\xe1\xe0\x00\x0c\x83\x11\xf9\xf5\xb2\x57\x97\x75\xd3\xe7\x07\xdb\xea\x31\x1e\xfb\x8c\xba\xcb\x06\x5a\xf2\xcc\x98\xa1\xc7\xd5\x60\xdc\xe3\x7d\x08\xab\xc1\xb3\x41\xe7\xa8\xfd\xf6\xde\xaf\x23\x39\xab\xc9\x01\xeb\x01\xed\xb2\xc1\x89\x78\x96\xe7\x6f\x68\xff\x0c\x83\x33\x3b\xfd\x18\x1d\xa3\xce\xd8\xfe\xbc\x7e\xd4\xca\xfe\x5b\x8c\x07\x4c\xcc\xf3\xc1\x28\x32\x75\xea\x1b\x14\xc3\x97\x5d\x15\xd6\x92\x39\xf0\x1e\x87\x82\x93\x84\x82\x44\x1c\x26\x15\xe1\x51\x12\xf2\x48\xd4\x68\x44\xfa\x55\xed\xc6\x64\xf0\xc9\xa8\xeb\x6f\x7d\x65\x28\xc3\xf2\x7d\xff\x0d\xa6\xc6\xb5\x13\xa0\xc1\xbb\x6b\xe9\xf8\xd6\xcd\xeb\xef\xde\xf6\xda\x37\xdd\x8e\x18\x3a\xee\xdd\x77\x83\xe7\x9a\x25\x67\x3f\x54\xdc\x6c\x36\xd1\x4a\xa9\x95\xf0\x9f\x28\x76\xdd\x94\x98\x55\x3c\x7a\x6f\x02\x60\x66\x2b\x33\xc8\x71\x89\x7a\xd1\x63\xdf\xb4\x58\xe6\xb1\xff\x10\x6e\x1e\xfb\xaf\x84\xff\x2f\x00\x00\xff\xff\xc6\x88\x66\x44\x36\x2c\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
