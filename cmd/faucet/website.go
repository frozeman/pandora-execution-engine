// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x6d\x93\xdb\x36\x92\xfe\x3c\xfe\x15\x1d\x9e\xbd\x92\xce\x22\xa9\x99\xb1\xbd\xb3\x92\xa8\x94\xd7\x9b\xdd\xf3\xd5\x5e\x92\x4a\x9c\xba\x4d\x65\x53\x57\x20\xd9\x12\xe1\x01\x01\x06\x00\xa5\x51\xa6\xf4\xdf\xaf\x1a\x20\x29\xea\x65\x26\xce\x8e\xaf\xea\xe6\x83\x86\x24\x1a\xdd\x8d\xee\x07\xe8\x17\x72\xfe\xc5\x5f\xbe\x79\xf7\xe1\xc7\x6f\xbf\x82\xc2\x96\x62\xf1\x6c\x4e\xff\x40\x30\xb9\x4a\x02\x94\xc1\xe2\xd9\xc5\xbc\x40\x96\x2f\x9e\x5d\x5c\xcc\x4b\xb4\x0c\xb2\x82\x69\x83\x36\x09\x6a\xbb\x0c\x6f\x82\xfd\x40\x61\x6d\x15\xe2\x2f\x35\x5f\x27\xc1\x3f\xc2\x1f\xde\x86\xef\x54\x59\x31\xcb\x53\x81\x01\x64\x4a\x5a\x94\x36\x09\xde\x7f\x95\x60\xbe\xc2\xde\x3c\xc9\x4a\x4c\x82\x35\xc7\x4d\xa5\xb4\xed\x91\x6e\x78\x6e\x8b\x24\xc7\x35\xcf\x30\x74\x37\x63\xe0\x92\x5b\xce\x44\x68\x32\x26\x30\xb9\x0c\x16\xcf\x88\x8f\xe5\x56\xe0\xe2\xfe\x3e\xfa\x1a\xed\x46\xe9\xdb\xdd\x6e\x0a\x6f\x6b\x5b\xa0\xb4\x3c\x63\x16\x73\xf8\x2b\xab\x33\xb4\xf3\xd8\x53\xba\x49\x82\xcb\x5b\x28\x34\x2e\x93\x80\x54\x37\xd3\x38\xce\x72\xf9\xd1\x44\x99\x50\x75\xbe\x14\x4c\x63\x94\xa9\x32\x66\x1f\xd9\x5d\x2c\x78\x6a\x62\xbb\xe1\xd6\xa2\x0e\x53\xa5\xac\xb1\x9a\x55\xf1\x75\x74\x1d\xfd\x31\xce\x8c\x89\xbb\x67\x51\xc9\x65\x94\x19\x13\x80\x46\x91\x04\xc6\x6e\x05\x9a\x02\xd1\x06\x10\x2f\xfe\x35\xb9\x4b\x25\x6d\xc8\x36\x68\x54\x89\xf1\xab\xe8\x8f\xd1\xc4\x89\xec\x3f\x7e\x5c\x2a\x89\x35\x99\xe6\x95\x05\xa3\xb3\x4f\x96\xfb\xf1\x97\x1a\xf5\x36\xbe\x8e\x2e\xa3\xcb\xe6\xc6\xc9\xf9\x68\x82\xc5\x3c\xf6\x0c\x17\x4f\xe2\x1d\x4a\x65\xb7\xf1\x55\xf4\x2a\xba\x8c\x2b\x96\xdd\xb2\x15\xe6\xad\x24\x1a\x8a\xda\x87\x9f\x4d\xee\x43\x3e\xfc\x78\xec\xc2\xcf\x21\xac\x54\x25\x4a\x1b\x7d\x34\xf1\x55\x74\x79\x13\x4d\xda\x07\xa7\xfc\x9d\x00\x72\x1a\x89\xba\x48\x55\xbe\x85\x7b\xba\xba\x48\x59\x76\xbb\xd2\xaa\x96\xf9\x14\xf4\x2a\x65\xc3\xab\x57\x37\x63\xb8\x9a\xfc\x89\x7e\x6e\xc6\x30\x89\x5e\x5f\x8e\x66\x44\xba\xa3\x9f\x68\x8d\x9a\x30\x2f\xc2\x0c\xa5\x45\xdd\x70\x29\xb9\x0c\x0b\xe4\xab\xc2\x4e\xe1\x72\x32\x79\x31\x3b\xf7\x74\x5d\xf8\xc7\x39\x37\x95\x60\xdb\x29\x2c\x05\xde\xf9\x47\x4c\xf0\x95\x0c\xb9\xc5\xd2\x4c\xc1\x73\xee\xc9\xac\xb4\x5a\x69\x34\xa6\x11\x56\x29\xc3\x2d\x57\x72\x4a\x58\x64\x96\xaf\xf1\x1c\xad\xa9\x98\x3c\x99\xc0\x52\xa3\x44\x6d\xf1\x48\x91\x54\xa8\xec\xd6\x3f\x73\xe7\x40\x7f\x11\x99\x12\x4a\x4f\x61\x53\xf0\x66\x1a\x38\x41\x50\x69\x6c\xd8\x43\xc5\xf2\x9c\xcb\xd5\x14\xde\x54\xcd\x7a\xa0\x64\x7a\xc5\xe5\x14\x26\xfb\x29\xf3\xb8\x75\xc0\x3c\xf6\x47\xde\xb3\x8b\x39\x79\xc2\x79\x3f\xe7\x6b\xc8\x04\x33\x26\x09\x8e\x4c\xec\x8e\xb2\x03\x02\x3a\xc1\x18\x97\xed\xd0\xc1\x98\x56\x9b\x00\x9c\xa0\x24\xf0\x4a\x84\xa9\xb2\x56\x95\x53\xb8\x24\xf5\x9a\x29\x47\xfc\x44\x28\x56\xe1\xe5\x55\x3b\x78\x31\x2f\x2e\x5b\x26\x16\xef\x6c\xe8\xfc\xd3\x79\x26\x58\xcc\x79\x3b\x77\xc9\x60\xc9\xc2\x94\xd9\x22\x00\xa6\x39\x0b\x0b\x9e\xe7\x28\x93\xc0\xea\x1a\x09\x81\x7c\x01\xfd\x83\xf3\x81\x73\xb3\xb8\x6c\xf5\x8a\x73\xbe\x6e\x96\xd5\xbb\x3c\x5a\xe1\xc3\x8b\xb8\x81\xe6\x42\x2d\x97\x06\x6d\xd8\x5b\x53\x8f\x98\xcb\xaa\xb6\x21\xe1\xbe\xea\xc6\x2f\xe6\xee\x29\xf0\x3c\x09\x6a\x2d\x82\x26\x70\xb8\x4b\xbb\xad\x1a\x53\x04\xdd\xc2\x95\x2e\x43\xf2\x84\x56\x22\x80\x4a\xb0\x0c\x0b\x25\x72\xd4\x49\xf0\xbd\xca\x38\x13\x20\xfd\x9a\xe1\x87\xef\xfe\x0e\x8d\xcb\xb8\x5c\xc1\x56\xd5\x1a\xfe\xfe\xe3\x3f\x2c\xb0\x3c\x27\xa8\x46\x51\x14\xc4\x7b\x2d\x1c\x70\x4f\xf5\x0c\x53\x2b\xf7\xba\x5e\xcc\xd3\xda\x5a\xd5\x11\xa6\x56\x42\x6a\x65\x98\xe3\x92\xd5\xc2\x42\xae\x55\x95\xab\x8d\x0c\xad\x5a\xad\x28\x40\xfa\x15\xf8\x49\x01\xe4\xcc\xb2\x66\x28\x09\x5a\xda\xd6\x81\xcc\x54\xaa\xaa\xab\xc6\x85\xfe\x21\xde\x55\x4c\xe6\x98\x93\xc3\x85\xc1\x60\xf1\x37\xbe\x46\x28\xd1\x2d\xe4\xe2\x18\x0e\x19\xd3\x68\xc3\x3e\xcf\x13\x50\xcc\x63\xaf\x8b\x5f\x11\x34\x7f\xf3\x5a\xb4\x9c\xba\x15\x94\x28\x6b\x38\xb8\x0b\x35\x9d\x29\xc1\xe2\xfe\x5e\x33\xb9\x42\x78\xce\xf3\xbb\x31\x3c\x67\xa5\xaa\xa5\x85\x69\x02\xd1\x5b\x77\x69\x76\xbb\x03\xee\x00\x73\xc1\x17\x73\xf6\x18\xb4\x41\xc9\x4c\xf0\xec\x36\x09\x2c\x47\x9d\xdc\xdf\x13\xf3\xdd\x6e\x06\xf7\xf7\x7c\x09\xcf\xa3\xef\x30\x63\x95\xcd\x0a\xb6\xdb\xad\x74\x7b\x1d\xe1\x1d\x66\xb5\xc5\xe1\xe8\xfe\x1e\x85\xc1\xdd\xce\xd4\x69\xc9\xed\xb0\x9d\x4e\xcf\x65\xbe\xdb\x91\xce\x8d\x9e\xbb\x1d\xc4\xc4\x54\xe6\x78\x07\xcf\xa3\x6f\x51\x73\x95\x1b\xf0\xf4\xf3\x98\x2d\xe6\xb1\xe0\x8b\x66\xde\xa1\x91\xe2\x5a\xec\xe1\x12\x13\x5e\x3a\x8c\xbb\x2d\xe3\x54\xed\x6b\x7a\x66\x07\xac\xc2\x4e\xfb\x06\x0e\x86\x5b\xbc\xc5\x6d\x12\xdc\xdf\xf7\xe7\x36\xa3\x19\x13\x82\x62\x45\x12\xf8\xa5\x75\x93\x7e\x45\x82\xe9\x9a\x1b\x97\x88\x2d\x5a\x0d\xf6\x6a\x7f\xe2\x96\x3e\x3a\xb4\xac\xaa\xa6\x70\x7d\xd5\x3b\xb1\xce\xed\xf6\x37\x47\xbb\xfd\xfa\x2c\x71\xc5\x24\x0a\x70\xbf\xa1\x29\x99\x68\xaf\x9b\xcd\xd2\x3b\x01\x8e\x27\x85\x74\x3e\x77\xaa\x75\xe7\xfc\x64\x06\x6a\x8d\x7a\x29\xd4\x66\x0a\xac\xb6\x6a\x06\x25\xbb\xeb\x62\xdd\xf5\x64\xd2\xd7\x9b\x12\x48\x96\x0a\x74\x27\x8b\xc6\x5f\x6a\x34\xd6\x74\xe7\x88\x1f\x72\xbf\x74\x9c\xe4\x28\x0d\xe6\x47\xd6\x20\x89\x64\x5a\x47\xd5\x73\x7d\x67\xcc\xb3\xba\x2f\x95\xea\xc2\x47\x5f\x8d\x86\x75\x2f\xd2\x05\x8b\xb9\xd5\x7b\xba\x8b\xb9\xcd\x7f\xd7\xf1\xaf\x29\x31\x7c\xe8\xf4\xf7\x07\x1a\xad\xbd\x42\xd4\x3e\x2b\x21\xc8\x82\xbb\x9d\xc7\x36\x7f\x82\x64\x02\x61\xca\x0c\x7e\x8a\x78\x17\xe5\xf7\xe2\xdd\xed\x53\xe5\x17\xc8\xb4\x4d\x91\xd9\x4f\x51\x60\x59\xcb\xbc\xb7\x7e\x3a\x3a\x9f\x28\xbe\x96\x7c\x8d\xda\x70\xbb\xfd\x54\xf9\x98\xef\x15\xf0\xf7\x87\x2a\xcc\x63\xab\x1f\x47\x5a\xff\xe6\x33\x6d\xed\xdf\x4a\x46\xae\x17\xff\xa1\x36\x90\x2b\x34\x60\x0b\x6e\x80\xc2\xea\x97\xf3\xb8\xb8\xee\x48\xaa\xc5\x07\x1a\x70\x61\x75\xe9\x72\x0a\xe0\x06\x74\x2d\x5d\xc8\x55\x12\x6c\x81\x87\x79\x48\x13\x9d\x23\xf8\xa0\x28\x97\x5b\xa3\xb4\x50\x32\xc1\x33\xae\x6a\x03\x2c\xb3\x4a\x1b\x58\x6a\x55\x02\xde\x15\xac\x36\x96\x18\xd1\xd9\xc1\xd6\x8c\x0b\xb7\x91\x9c\x3f\x41\x69\x60\x59\x56\x97\x35\xe5\xa2\x72\x05\x28\x55\xbd\x2a\xbc\x2a\x56\x81\x0f\x4a\x42\xc9\x55\xa7\x8e\xa9\x58\x09\xcc\x5a\x96\xdd\x9a\x31\xb4\x27\x02\x30\x8d\x60\x39\xe6\x34\x2b\x53\x65\xa9\x24\x5c\xeb\x1c\x2a\xa6\xed\x16\xcc\x61\x4e\xc1\xb2\xcc\x45\xb8\x08\xde\xca\xad\x92\x08\x05\x5b\x3b\x05\xe1\x83\x2f\x40\x48\xad\xbf\xb2\x0c\x53\xa5\x3a\x6a\x28\xd9\xb6\x15\xd7\x28\xbf\xe1\xb6\xe0\xde\x3a\x15\xea\x92\xa6\xe6\x20\x78\xc9\xad\x89\xe6\x71\xb5\x3f\x4d\xf7\x71\x59\x84\x85\xd2\xfc\x57\x4a\x68\x44\xff\xe8\xb4\x47\x07\x4b\x7b\x2e\x3a\x9f\x0b\x5c\xda\x29\xbc\xf2\xe7\xe2\x31\x8a\x9b\x9a\xe9\x1c\x84\x5b\x9e\xae\x16\xa5\x60\x33\x85\x6b\x9f\xc6\xfa\x24\x22\xb7\x3d\x0d\xf2\x23\xa0\x79\xa1\x37\x37\xd5\x5d\xa7\x47\x97\x0b\x4f\x3a\x26\x04\x80\x43\xa3\xac\x79\x67\xc6\x31\x94\xec\x16\x81\xc1\x9c\x1d\xd5\xd4\x8d\xd2\xae\x22\xe3\xae\xa3\x10\xdb\x0d\xa2\xfd\x92\x36\x6e\xf2\x9d\x67\xc8\xe5\xea\xc5\xd5\xc4\x03\x92\x2e\x88\xfd\x8b\xab\x09\x97\x56\xbd\xb8\x9a\x4c\xee\x26\x9f\xf8\xf7\xe2\x6a\xa2\xe4\x8b\xab\x89\x2d\xf0\xc5\xd5\xe4\xc5\xd5\x75\x1f\xca\xfe\xc9\x57\xb6\x40\x8d\x75\x49\x54\x68\x48\x5a\x8b\xf0\x00\x2c\xd3\x2b\xb4\x49\xf0\x3f\x2c\x55\xb5\x9d\xa6\x82\xc9\xdb\x60\xe1\xd4\xa5\x4c\xc3\xa1\xe0\x34\x2f\x85\x8a\x19\x82\x03\x69\xeb\x10\xd2\x74\x4e\x0c\x0c\x4d\xad\x5d\xcd\x48\x90\xa3\xf5\xba\xbd\x29\x07\x84\x30\x32\xca\x28\x9a\xa7\x3a\x5e\xbc\x53\xd5\x36\x74\x4c\xdc\xf4\x13\x13\x9a\xba\xaa\x94\xb6\x51\xdf\x94\x8c\x6a\x1f\x81\x26\xbe\x99\xbc\xbe\x79\xf3\xa8\xea\x86\x32\x6b\xa7\x7f\xa7\x21\x4b\xd5\x1a\xc1\xe7\xf1\xa9\xba\x03\x26\x73\x58\x72\x8d\xc0\x36\x6c\xfb\xc5\x3c\xce\x5d\xd5\xf5\x74\xc4\x2e\x9b\x9d\xf5\xff\x0a\xb2\xed\x76\x1f\x43\x55\xa7\x82\x9b\x02\x18\x48\xdc\xc0\xdc\x58\xad\xe4\x6a\xe1\x9e\x66\x54\x86\xba\x5b\xa8\x94\xb1\x0f\xb9\x1e\xcb\x14\xf3\xfc\x8c\xf3\x3f\x97\xef\x37\x9b\x4d\xd4\x5a\xd1\x39\xbe\x40\x51\xc5\x74\xec\xd5\x92\xdb\x6d\xec\xb7\x8f\x92\xf1\x97\x3c\x4f\xae\x6e\xae\xde\xbc\xb9\x7a\xf5\xa7\x9b\xd7\xaf\xaf\x6e\x5e\xbd\x7e\x08\x15\xb4\xa0\x27\x82\xc2\xa7\xce\x5f\x2b\xaa\x52\xbb\xbc\xd9\x63\xa5\xcd\xd7\x28\x2e\xe7\x54\x77\xe8\xe0\x5f\xc6\x4f\x2d\x29\xf9\x08\x99\x38\x9b\x37\xfc\x0e\x04\x39\x08\x3d\xa2\xd9\x13\x61\xd5\x42\x87\x50\xa2\x6a\x4b\x2b\x6c\x8b\x77\xae\x64\x07\xa5\x31\x18\x5e\x56\x62\x0b\xd9\xde\xeb\xa7\x98\x7a\xd0\x21\xbf\x09\xa9\x43\x97\x79\x80\xb9\x78\x5f\xaa\x1c\x29\xd0\x9b\xda\x64\x58\xb9\x5e\x30\x45\xcf\x3f\x6f\x7f\x65\xd2\x72\x89\x6d\x94\x8d\xe0\x1b\x29\xb6\x50\x1b\x84\xa5\xd2\x90\x63\x5a\xaf\x56\x2e\x33\xd0\x50\x69\xbe\x66\x16\xdb\xd0\x6a\x1a\x44\x74\x80\xe8\x55\x32\x94\xe4\x88\x5e\xce\xf1\xa3\xaa\x21\x63\x12\xac\x66\xd9\xad\xdf\x25\xb5\xd6\xb4\x4b\x2a\xf4\xab\xe9\x82\x7b\x8a\x42\x6d\x1c\x89\x5f\xf7\x92\xa3\x70\x91\xde\x20\x42\xa1\x36\x50\xd6\x99\xdb\x88\x14\xc9\xdd\x22\x36\x8c\x5b\xa8\xa5\xe5\xc2\xdb\xd2\xd6\x5a\x52\x5e\x80\x07\x91\xf9\xa4\xd6\x9b\x63\xb9\xf8\x50\xe0\x99\x2c\xa8\xab\xd2\x40\xe3\x3b\x4f\x0e\x95\x56\x16\x33\x72\x26\xb0\x15\xe3\xd2\x90\x47\x5c\xec\xc7\xf2\x13\xaa\xb8\xee\xaa\xb9\xd8\xf7\x31\xdd\x70\x1c\xc3\xdf\x84\x4a\x99\x80\x35\xa1\x3c\x15\x94\xc0\x29\x28\x14\x2d\xbd\x67\x2d\x63\x99\xad\x0d\xa8\xa5\x7b\xea\x35\xa7\xf9\x6b\xa6\xc9\x83\x58\x56\x16\x92\xa6\x97\x46\xcf\x0c\xea\x75\xd3\x21\xa4\x5b\xaa\xd4\x0f\xc6\x3b\xab\x27\xf0\xd3\xcf\xb3\x67\x8d\x2a\x7f\xc1\xa5\x83\x04\x61\xdb\x2f\xd9\x16\xcc\x42\xa6\x91\x59\x34\x90\x09\x65\x6a\xed\x35\xcc\xb5\xaa\x80\xb4\x6c\x39\xb5\x9c\x69\xa0\x72\xd2\x5a\x26\xc3\x82\x99\x62\xd4\xb4\x02\x35\x3a\x2f\x75\x63\xed\xf3\x0b\x42\xdd\x90\x18\xf0\x64\x32\x03\x3e\x6f\xf9\x46\x02\xe5\xca\x16\x33\xe0\x2f\x5f\x76\xc4\x17\x7c\x09\xc3\x96\xe2\x27\xfe\x73\x64\xef\x22\x92\x02\x49\x02\x7d\x69\x4e\x60\xc3\xc7\x54\x82\x67\x38\xe4\x63\x68\xda\xb5\xf4\x97\x6a\x64\xb7\xed\x5d\xe3\x47\xff\xcf\xfd\xee\x66\x87\x96\x71\xc6\x3f\xb0\x8d\xaf\xf5\x0d\x30\x58\x71\x63\xa1\xd6\x02\x9a\x3d\xec\x5d\xd0\x39\xc4\xd1\xf5\xad\x72\x82\xcb\xe6\xa2\xc1\x54\xbb\x04\xcf\x26\x32\x28\xf3\xe1\x7f\x7e\xff\xcd\xd7\x91\xb1\x9a\xcb\x15\x5f\x6e\x87\xf7\xb5\x16\x53\x78\x3e\x0c\xfe\xad\xd6\x22\x18\xfd\x34\xf9\x39\x5a\x33\x51\xe3\xd8\xf9\x7b\xea\x7e\x4f\xa4\x8c\xa1\xb9\x9c\xc2\xa1\xc0\xdd\x68\x34\x3b\xdf\x17\xe9\xb5\x71\x34\x1a\xb4\x43\x22\xec\x80\x7f\x6c\x23\x06\x25\xda\x42\xb9\xad\xab\x31\x53\x52\x62\x66\xa1\xae\x94\x6c\x4c\x02\x42\x19\xb3\x07\x62\x4b\x91\x9c\x82\xa2\xa1\x4f\x5c\x90\xfe\x6f\x4c\xbf\x57\xd9\x2d\xda\xe1\x70\xb8\xe1\x32\x57\x9b\x48\x28\x7f\xcc\x46\xb4\x49\x55\xa6\x04\x24\x49\x02\x4d\x04\x0d\x46\xf0\x25\x04\x1b\x43\xb1\x34\x80\x29\x5d\xd2\xd5\x08\x5e\xc2\xf1\xf4\x82\xe2\xfc\x4b\x08\x62\x56\xf1\x60\xe4\xb7\x43\x6b\x78\x25\x4b\x34\x86\xad\xb0\xaf\xa0\x2b\x86\x3a\x90\xd1\x3a\x4a\xb3\x82\x04\x9c\x83\x2a\xa6\x0d\x7a\x92\x88\xaa\xef\x16\x6d\x84\x59\x47\x96\x24\x20\x6b\x21\xf6\x20\xf5\x9b\x62\xd6\xc2\xef\x80\x3c\xf2\x71\xe6\x8b\x24\x01\x2a\x46\xc9\xc4\xf9\x7e\x26\x39\xdf\x17\xcd\xa3\x88\xe2\xc2\x7e\xc6\x68\xd6\x47\xf3\x01\x37\xcc\x7f\x8b\x1d\xe6\xc7\xfc\x30\x7f\x80\xa1\xeb\x51\x3c\xc6\xcf\xf7\x34\x7a\xec\xdc\x83\x07\xb8\xc9\xba\x4c\x51\x3f\xc6\xce\xf7\x28\x1a\x76\xce\xd4\xef\xa5\xed\xcd\x1d\xc3\xe5\x9b\xd1\x03\xdc\x51\x6b\xf5\x20\x73\xa9\xec\x76\x78\x2f\xd8\x96\xf2\x25\x18\x58\x55\xbd\x73\x4d\x85\xc1\xd8\x45\xdc\x29\x74\x1c\xc6\xae\x57\x3c\x85\x81\xbb\xa3\x71\x5e\xa2\x9b\xf5\x7a\x32\x99\x8c\xa1\x7d\xc3\xf2\x67\x46\x9b\x50\xd7\xb8\x7b\x40\x1f\x53\x67\x19\xc5\xfd\xa7\x68\xd4\xf0\xe8\x74\x6a\xee\x9f\xa0\x55\x17\x1b\x0e\xd4\x82\x3f\xfc\x01\x4e\x46\x0f\x61\x1c\xc7\xf0\x5f\x8c\x4a\x6f\x21\x5c\xc3\xc0\xf5\x09\x3a\xfa\x92\x1b\xe3\x0a\x70\x03\xb9\x92\xd8\xcc\xf9\x7d\xc7\xfe\x89\x8e\x0d\x19\x2c\x60\x72\xac\x20\x1d\x87\xbd\xb0\x70\x26\x5a\xf4\xf8\x1e\x06\x82\x8b\x5d\x5f\xde\xc1\x4c\x5e\x22\x7c\x91\x40\x10\xf4\x27\x9f\x50\x10\x41\xc7\xec\xc2\xa0\xfd\xe0\x7d\x31\x6c\xa2\xe3\xb9\xd8\x35\x1a\xc3\xf5\x64\x32\x19\x9d\x28\xb1\xdb\x9b\xf7\x6d\x45\x69\x13\x30\xb9\x75\x47\x62\x67\x5b\x97\x38\x52\x0a\x44\x47\x9a\x80\x4c\x09\xe1\x73\x96\x66\x2a\x19\xb8\x69\x98\x24\x10\x5e\xce\xce\x44\xd1\x9e\x25\x7b\x4b\x3b\x76\xcf\x19\xdb\x1f\xbb\xe8\xd0\x66\x47\xc4\xe1\xe5\x81\x53\x0e\xfc\x75\xde\x31\x17\x9d\xde\x7c\x6f\xd1\x23\x77\xed\xfd\x75\x6c\xb3\x9e\xfe\x9e\xcf\xcb\xcb\x4f\x5c\x46\x37\x5c\xd5\xa6\x18\x1e\x29\x3a\x9a\x9d\xfa\xe6\xbd\x45\x4d\x59\xb2\xa2\x90\x45\xbe\xa0\x32\x40\xe3\x89\x4b\x5c\xaa\xae\x31\xd4\x28\x73\xd4\x6d\x4a\xe1\x33\x7b\x4a\x00\x0f\x5c\xe6\x2b\xca\x3e\x9c\x7a\x2b\x3a\xb1\xed\x0c\x38\x2c\x28\xcd\x03\x1e\x86\xbd\xb5\xb8\xbc\x4c\x49\x04\x00\x38\xda\x09\x0e\xad\x07\x70\x25\x62\x14\xac\x32\x98\x43\x02\xfe\x7d\xf9\x70\x14\xd5\x92\xdf\x0d\x47\x61\x73\x7f\xcc\xa3\x1d\x9f\x75\x75\x62\xab\xfb\xcb\x04\x82\xb9\xd5\xc0\xf3\x64\x10\xc0\xcb\x73\xfb\x90\x42\xef\x60\xb1\xd7\xa0\x3f\x15\x60\x6e\xf3\x85\x6b\x7f\xfa\x82\xed\x9f\x41\xff\x85\x7c\xad\xc5\xf0\x84\x2d\x5b\x33\xcb\xb4\xe3\x3a\x9a\xc1\x9e\xbc\xa9\x14\x33\xf2\xd0\x0c\x7c\x49\xea\xba\xac\xd0\xbd\x97\x70\x77\xa9\xd2\x39\xea\x50\xb3\x9c\xd7\x66\x0a\xaf\xaa\xbb\xd9\x3f\xdb\xf7\x36\xae\x17\xfc\xa8\xaa\x95\xc6\xc5\x89\x46\x4d\x7b\xf1\x25\x04\xf3\x98\x08\x7e\x8b\x4d\xb7\xd8\xfe\xdb\x76\x38\xd3\xf1\x86\xee\x5d\x78\xf3\xbc\xe4\x79\x2e\x90\x14\xde\xb3\xa7\x1d\x49\xfe\xef\xef\xab\x43\x91\xd0\xb4\xba\xf7\x73\x76\x80\xc2\xe0\x23\x13\xba\xae\xf9\x80\x00\x10\xd2\x92\xb9\xb3\x79\x53\x6d\xbb\xc7\x7a\xe0\x6c\xd1\x7c\x75\x91\xd7\xda\x25\x5c\xc3\xb0\x01\xd8\x18\x06\x86\x12\xc0\xdc\x0c\x46\x51\x51\x97\x4c\xf2\x5f\x71\x48\xc1\x69\xe4\x6d\xe5\xda\xf0\xc1\xe9\xb9\x7c\xa2\xcc\xbe\x3f\x3e\x68\x03\xdd\xa0\x31\xe2\xa0\xf5\xee\xab\x7d\x71\x3f\x85\xc9\x6c\xf0\x3b\x2d\x74\x5e\x4a\x98\x32\x0d\xfd\x9b\xb0\x8d\xc0\xa0\x15\x49\x6f\xc7\x52\xa6\x07\xbe\x95\xe1\x92\x74\xa9\x36\xc9\xe0\x7a\xd2\x29\xe9\x1d\xed\xfc\x3c\x68\xb0\x76\xe2\x0c\xd2\xb2\xdd\x9a\x0b\xb8\x9e\x7c\x0e\x6d\x7d\x3b\xe4\x68\x05\x56\xf3\x0a\x73\x60\x99\xe5\x6b\xfc\x3f\x58\xc8\x67\x30\xf2\xef\x56\x91\x70\xd8\x1a\xcf\xc1\xf4\x40\x5f\x1a\xed\x6c\xfb\xef\xb4\xdf\x20\x76\x16\x7e\x09\xc1\xd9\x85\x3c\x88\xc4\x23\xc2\xa3\xad\xfd\xf0\xbe\x77\xef\x95\x82\xe3\xc0\x42\x29\x6f\xf7\x46\x74\x14\x15\xb6\x14\xc3\x60\x6e\xdd\x57\x31\xa4\x73\xc7\xc1\x31\xf0\x8f\x0f\xf3\xba\xdd\x61\x35\x43\x45\x3c\x1e\x15\x5b\xd0\xcb\x50\xba\x82\xac\x4d\x47\x60\xb7\xff\x78\x28\x8e\xe1\x7b\xcb\xb4\x05\x06\x3f\xbc\x87\xba\xca\x99\xa5\x10\xa6\x80\x82\xa4\x7f\x47\xd2\x7e\x5d\x94\x32\x6d\x60\xa9\xf4\x86\xe9\xbc\x69\xd2\xd8\x02\xb7\xee\x1d\x4e\x9b\xff\x19\xb4\xef\xe9\x14\x5b\x33\x31\x3c\x29\xfe\x9e\x0f\x07\x51\xdf\xe5\x83\x51\x84\x2c\x2b\x4e\x09\x5d\xc4\xea\xe4\x26\xf0\xb5\xab\x03\x86\xcf\x87\xb6\xe0\x66\x14\x31\x6b\xf5\x70\x70\x00\x86\xc1\x88\xfc\x7a\xd9\xab\xcb\xba\xe9\xf3\x83\x6d\xf5\x18\x8f\x7d\x46\xdd\x65\x03\x2d\x79\x66\xcc\xd0\xe3\x6a\x30\xee\xf1\x3e\x84\xd5\xe0\xc5\xa0\x73\xd4\x7e\x7b\xef\xd7\x91\x9c\xd5\xe4\x80\xf5\x80\x76\xd9\xe0\x44\x3c\xcb\xf3\x77\xb4\x7f\x86\xc1\x99\x9d\x7e\x8c\x8e\x51\x67\x6c\x7f\x5e\x3f\x6a\x65\xff\x2d\xc6\x03\x26\xe6\xf9\x60\x14\x99\x3a\xf5\x0d\x8a\xe1\xeb\xae\x0a\x6b\xc9\x1c\x78\x8f\x43\xc1\x49\x42\x41\x22\x0e\x93\x8a\xf0\x28\x09\x79\x24\x6a\x34\x22\xfd\xaa\x76\x63\x32\xf8\x64\xd4\xf5\xb7\xbe\x32\x94\x61\xf9\xbe\xff\x06\x53\xe3\xda\x09\xd0\xe0\xdd\xb5\x74\x7c\xeb\xe6\xed\xb7\xef\x7b\xed\x9b\x6e\x47\x0c\x1d\xf7\xee\x93\xc1\x73\xcd\x92\xb3\xdf\x28\x6e\x36\x9b\x68\xa5\xd4\x4a\xf8\xaf\x13\xbb\x6e\x4a\xcc\x2a\x1e\x7d\x34\x01\x30\xb3\x95\x19\xe4\xb8\x44\xbd\xe8\xb1\x6f\x5a\x2c\xf3\xd8\x7f\x03\x37\x8f\xfd\x07\xc2\xff\x1b\x00\x00\xff\xff\x68\xcd\x10\xde\x31\x2c\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
